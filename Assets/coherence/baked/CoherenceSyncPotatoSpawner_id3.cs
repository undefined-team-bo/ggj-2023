// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using UnityEngine;
	using Coherence.Toolkit;
	using Coherence.Toolkit.Bindings;
	using Coherence.Entity;
	using Coherence.ProtocolDef;
	using Coherence.Brook;
	using Coherence.Toolkit.Bindings.ValueBindings;
	using Coherence.Toolkit.Bindings.TransformBindings;
	using Coherence.Connection;
	using Coherence.Log;
	using Logger = Coherence.Log.Logger;
	using UnityEngine.Scripting;


	[Preserve]
	[AddComponentMenu("coherence/Baked/Baked 'PotatoSpawner' (auto assigned)")]
	[RequireComponent(typeof(CoherenceSync))]
	public class CoherenceSyncPotatoSpawner_id3 : CoherenceSyncBaked
	{
		private CoherenceSync coherenceSync;
		private Logger logger;

		// Cached targets for commands		
		private PotatoSpawnerController PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4_CommandTarget;

		private IClient client;
		private CoherenceMonoBridge monoBridge => coherenceSync.MonoBridge;

		protected void Awake()
		{
			coherenceSync = GetComponent<CoherenceSync>();
			coherenceSync.usingReflection = false;

			logger = coherenceSync.logger.With<CoherenceSyncPotatoSpawner_id3>();
			if (coherenceSync.TryGetBindingByGuid("f0f695e4-790e-4640-b183-0896fcb6efa4", "SpawnPotato", out Binding PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4))
			{
				PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4_CommandTarget = (PotatoSpawnerController)PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4.UnityComponent;
				coherenceSync.AddCommandRequestDelegate("PotatoSpawnerController.SpawnPotato", "()",
				SendCommand_PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4, ReceiveLocalCommand_PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4, MessageTarget.AuthorityOnly, PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4_CommandTarget,false);
			}
			else
			{
				logger.Error("Couldn't find command binding (SpawnPotato)");
			}
		}

		public override List<ICoherenceComponentData> CreateEntity()
		{
			if (coherenceSync.UsesLODsAtRuntime && (Archetypes.IndexForName.TryGetValue(coherenceSync.Archetype.ArchetypeName, out int archetypeIndex)))
			{
				var components = new List<ICoherenceComponentData>()
				{
					new ArchetypeComponent
					{
						index = archetypeIndex
					}
				};

				return components;
			}
			else
			{
				logger.Warning($"Unable to find archetype {coherenceSync.Archetype.ArchetypeName} in dictionary. Please, bake manually (coherence > Bake)");
			}

			return null;
		}

		public override void Initialize(CoherenceSync sync, IClient client)
		{
			if (coherenceSync == null)
			{
				coherenceSync = sync;
			}
			this.client = client;
		}
		void SendCommand_PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4(MessageTarget target, object[] args)
		{
			var command = new PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4();
			client.SendCommand(command, target, coherenceSync.EntityID);
		}

		void ReceiveLocalCommand_PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4(MessageTarget target, object[] args)
		{
			var command = new PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4();
			ReceiveCommand_PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4(command);
		}

		void ReceiveCommand_PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4(PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4 command)
		{
			var target = PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4_CommandTarget;
			target.SpawnPotato();
		}

		public override void ReceiveCommand(IEntityCommand command)
		{
			switch(command)
			{
				case PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4 castedCommand:
					ReceiveCommand_PotatoSpawner_id3_PotatoSpawnerController__char_46_SpawnPotato_f0f695e4_790e_4640_b183_0896fcb6efa4(castedCommand);
					break;
				default:
					logger.Warning($"[CoherenceSyncPotatoSpawner_id3] Unhandled command: {command.GetType()}.");
					break;
			}
		}
	}
}
